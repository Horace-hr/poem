package model;

import utils.DicUtil;
import utils.MD5;
import model.base.BaseAdmin;

import com.alibaba.fastjson.JSONObject;
import com.jfinal.captcha.CaptchaRender;
import com.jfinal.core.Controller;
import com.jfinal.kit.StrKit;
import com.jfinal.plugin.ehcache.CacheKit;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Admin extends BaseAdmin<Admin> {
	public static final Admin dao = new Admin();
	public static final String ADMIN_STATUS = "aid" ;
	
	//重置密码
	public JSONObject resetPsw(String newPsw , String rePsw , String code , Admin admin , Controller controller) {
		if (!newPsw.equals(rePsw)) {
			return sendErrorJson("两次输入密码不一致，请重新输入");
		}
		if (!CaptchaRender.validate(controller, code)) {
			return sendErrorJson("验证码错误");
		}
		Admin adminExsited = this.findByUserName(admin.getUserName());
		if (null == adminExsited) {
			return sendErrorJson("用户名不存在") ;
		}
		String psw = this.getMD5Psw(admin.getPassword(), adminExsited) ;
		if (!psw.equals(adminExsited.getPassword())) {
			return sendErrorJson("密码错误");
		}
		
		newPsw = this.getMD5Psw(newPsw, adminExsited);
		adminExsited.setPassword(newPsw);
		adminExsited.update() ;
		
		CacheKit.remove(DicUtil.CACHE_USER_BY_NAME, admin.getUserName());
		controller.removeCookie(Admin.ADMIN_STATUS);
		controller.setSessionAttr(Admin.ADMIN_STATUS, adminExsited.getUserName());
		
		return sendSuccessJson() ;
		
	}
	
	//登录验证
	public JSONObject check(Admin admin , Boolean keepStatus , String code ,  Controller controller) {
		if (!CaptchaRender.validate(controller, code)) {
			return sendErrorJson("验证码错误");
		}
		Admin adminExsited = this.findByUserName(admin.getUserName());
		if (null == adminExsited) {
			return sendErrorJson("用户名不存在") ;
		}
		String psw = this.getMD5Psw(admin.getPassword(), adminExsited) ;
		if (!psw.equals(adminExsited.getPassword())) {
			return sendErrorJson("密码错误");
		}
		if (keepStatus) {
			controller.setCookie(Admin.ADMIN_STATUS, adminExsited.getUserName() , 3*24*60*60 );
		}else{
			controller.removeCookie(Admin.ADMIN_STATUS);
			controller.setSessionAttr(Admin.ADMIN_STATUS, adminExsited.getUserName());
		}
		return sendSuccessJson();
	}
	
	//从缓存中查询Admin
	public Admin findByUserName(String userName) {
		return this.findFirstByCache( DicUtil.CACHE_USER_BY_NAME , userName, "SELECT * FROM t_admin WHERE userName = ?" , userName);
	}
	
	/*
	 * 生成MD5密码
	 * @param 新密码
	 * @param 数据库中查出的数据
	 */
	public String getMD5Psw(String newPsw , Admin admin) {
		return MD5.md5(admin.getId() + newPsw + admin.getRandomStr()) ;
	}
	
	public static void main(String[] args) {
		//System.out.println(MD5.md5("049375175c5950fa06949553fb779cf5" + "123123" + "cavenosCorperation" ) );
		System.out.println(MD5.md5("02618f992fcb458e80dc235eecb73a13" + "123456" + "administrator" ) );
		
		
	}
	
}
