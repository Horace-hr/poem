package model;

import model.base.BaseGiving;
import utils.DicUtil;

import com.alibaba.fastjson.JSONObject;
import com.jfinal.plugin.ehcache.CacheKit;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Giving extends BaseGiving<Giving> {
	public static final Giving dao = new Giving().dao();
	
	public Giving findRecord(String userId , String novelId) {
		String sqlString = " SELECT tg.id , tg.coins , tg.rechargeId , tr.novelId FROM t_giving tg LEFT JOIN t_recharge tr ON tr.id = tg.rechargeId WHERE tr.userId = ? AND tr.novelId = ? AND tg.isFinished = 0 " ;
		return this.findFirstByCache(DicUtil.CACHE_GIVING, userId + novelId, sqlString , userId , novelId ) ;
	}
	
	public int save(String rechargeId , String userId , int amount) {
		Giving giving = new Giving() ;
		giving.setRechargeId(rechargeId);
		int coins = DicUtil.getRan(amount) ;
		giving.setCoins(coins) ;
		giving.save() ;
		return coins ;
	}
	
	//缓存清理：用户领取奖赏
	public JSONObject finished(String userId , String novelId ,  int type) {
		//更改状态
		Giving giving = this.findRecord(userId, novelId) ;
		if (null == giving) {
			return sendSuccessJson("") ;
		}
		giving.setIsFinished(true);
		giving.update() ;
		CacheKit.remove(DicUtil.CACHE_GIVING, userId + novelId ) ;
		//设置充值记录的givings,type为0说明用户放弃领取
		if (type == 0) {
			return sendSuccessJson("") ;
		}
		Recharge recharge = new Recharge() ;
		recharge.setId(giving.getRechargeId());
		recharge.setGivings(giving.getCoins());
		recharge.update() ;
		CacheKit.removeAll(DicUtil.CACHE_RECHARGE_RECORD) ;
		//变更用户金币余额
		User user = User.dao.findByIdInCache(userId);
		user.setCoins(user.getCoins() + giving.getCoins());
		user.setToken(User.dao.getToken(user));
		user.update() ;
		CacheKit.remove(DicUtil.CACHE_USER_INFO, userId);
		return sendSuccessJson("已领取" + giving.getCoins() + "个读书币") ;
	}
	
}
