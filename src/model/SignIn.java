package model;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

import utils.DicUtil;

import com.alibaba.fastjson.JSONObject;
import com.jfinal.plugin.ehcache.CacheKit;

import model.base.BaseSignIn;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class SignIn extends BaseSignIn<SignIn> {
	public static final SignIn dao = new SignIn().dao();
	
	/*********************缓存清理*************************/
	public SignIn findByUserIdInCache(String userId) {
		return this.findFirstByCache(DicUtil.CACHE_SIGNIN, userId, " SELECT ts.* , tu.score FROM t_sign_in ts LEFT JOIN t_user tu ON tu.id = ts.userId WHERE ts.userId = ? " , userId ) ;
	}
	
	/*********************缓存存储*************************/
	//【】保存用户签到记录，奖励积分
	public JSONObject save(String userId) {
		SignIn signIn = this.findByUserIdInCache(userId) ;
		User user = User.dao.findByIdInCache(userId);
		int days = 1 ;
		if (null == signIn) {
			signIn = new SignIn() ;
			signIn.setTime(new Date());
			signIn.setDays(1);
			signIn.setUserId(userId);
			signIn.save();
			user.setScore(user.getScore() + 1 ) ;
		}else{
			//连续多少天就奖励多少分，最多奖励7积分
			days = signIn.getDays() ;
			Date lastTime = signIn.getTime() ;
			if (this.signIned(lastTime)) {
				return sendErrorJson("今天已经签到了哦~");
			}
			if (!this.isContinue(lastTime)) {
				days = 1 ;
			}else if(days < 7){
				days += 1 ;
			}
			signIn.setTime(new Date());
			signIn.setDays(days);
			signIn.update() ;
			user.setScore(user.getScore() + days) ;
		}
		user.setToken(User.dao.getToken(user)) ;
		user.update() ;
		CacheKit.remove(DicUtil.CACHE_SIGNIN, userId) ;
		CacheKit.remove(DicUtil.CACHE_USER_INFO, userId) ;
		return sendSuccessJson("签到成功,获得" + days + "积分") ;
	}
	
	/*********************普通业务*************************/
	public boolean isContinue(Date lastTime) {
		Calendar calendar = Calendar.getInstance() ;
		calendar.setTime(lastTime);
		calendar.set(Calendar.DATE, calendar.get(Calendar.DATE) + 1 ) ;
		SimpleDateFormat sFormat = new SimpleDateFormat("yyyy-MM-dd");
		return sFormat.format(calendar.getTime()).equals(sFormat.format(new Date())) ;
	}
	
	public boolean signIned(Date lastTime) {
		SimpleDateFormat sFormat = new SimpleDateFormat("yyyy-MM-dd");
		return sFormat.format(lastTime).equals(sFormat.format(new Date())) ;
	}
}
